% !TeX root = thesis-main.tex
\usepackage[english]{babel}
%\usepackage{titlesec}

% common utilities
\usepackage{seqsplit}
\usepackage{comment}
\usepackage{hyperref}
\usepackage{graphicx}
\usepackage{wrapfig}
\usepackage{minted}
\usepackage[dvipsnames,svgnames]{xcolor}
\usepackage{amssymb}
\usepackage{amsmath, bm}
\usepackage{latexsym}
\usepackage{amsthm}
\usepackage{lineno}
\usepackage{geometry}
\usepackage{listings}
\usepackage{ifthen}
\usepackage[colorinlistoftodos,prependcaption]{todonotes}
\usepackage{amsfonts}
\usepackage{algorithmic}
\usepackage[nolist]{acronym}
\usepackage{textcomp}
\usepackage{xcolor}
\usepackage{tabularx}
\usepackage{subcaption}
\usepackage[binary-units=true]{siunitx}
\usepackage{tabulary}
\usepackage[ruled]{algorithm2e}
\usepackage{mathtools}
\usepackage[backend=biber,style=alphabetic]{biblatex}
\usepackage{xurl}
\usepackage[shortlabels, inline]{enumitem}
\usepackage{minitoc}

\usepackage[\thesislang]{cleveref} % must be last
\makeatletter
\newcommand{\reqlabel}[2]{#2.\def\@currentlabel{#2}\label{#1}}
\makeatother

\newcommand{\scafi}{{ScaFi}}
\newcommand{\textttb}[1]{\seqsplit{\texttt{#1}}}
\newcommand{\scafiweb}[0]{{ScaFi-Web}}
\newcommand{\rev}[1]{{#1}}
\newcommand{\meta}[1]{{\color{blue}#1}}
\newcommand{\revision}[1]{{#1}}

% \usepackage[disable]{todonotes} % decommentare prima della versione finale
\newcommand{\gcsidenote}[1]{\todo[size=\tiny,color=green]{\textbf{GC:} #1}}
\newcommand{\gcnote}[1]{\todo[size=\scriptsize,color=green,inline]{\textbf{Giovanni Ciatto:} #1}}
\newcommand{\dpsidenote}[1]{\todo[size=\tiny,color=red]{\textbf{DP:} #1}}
\newcommand{\dpnote}[1]{\todo[size=\scriptsize,color=red,inline]{\textbf{Danilo Pianini:} #1}}
\newcommand{\rcsidenote}[1]{\todo[size=\tiny,color=cyan]{\textbf{RC:} #1}}
\newcommand{\rcnote}[1]{\todo[size=\scriptsize,color=cyan,inline]{\textbf{Roberta Calegari:} #1}}
\newcommand{\scarlib}{ScaRLib}

\setcounter{secnumdepth}{4}
% \usemintedstyle{pastie}
\usemintedstyle{friendly}
% \usemintedstyle{murphy}
% \usemintedstyle{vs}
% \usemintedstyle{tango}
\usetikzlibrary{backgrounds}

\setminted[scala]{fontsize=\scriptsize,baselinestretch=1,bgcolor=White,frame=single}

\ifthenelse{\equal{italian}{\thesislang}}{
	\renewcommand{\lstlistingname}{Listato}
	\renewcommand{\lstlistlistingname}{Elenco dei listati}
}{}
\ifthenelse{\equal{italian}{\thesislang}}{
	\newcommand{\acknowledgementsname}{Ringraziamenti}
}{
	\newcommand{\acknowledgementsname}{Acknowledgements}	
}
\ifthenelse{\equal{italian}{\thesislang}}{
	\newcommand{\introductionname}{Introduzione}
}{
	\newcommand{\introductionname}{Introduction}	
}
\ifthenelse{\equal{italian}{\thesislang}}{
	\newcommand{\conclusionsname}{Conclusioni}
}{
	\newcommand{\conclusionsname}{Conclusions}	
}

\newenvironment{abstract}{\chapter*{\centering\abstractname}\addcontentsline{toc}{chapter}{\abstractname}}{} 

\newenvironment{acknowledgements}{\chapter*{\acknowledgementsname}}{} 

\newenvironment{dedication}{\chapter*{}\begin{flushright}\itshape}{\normalfont\end{flushright}}

\newcommand{\chapterWithoutNumber}[1]{\chapter*{#1}\addcontentsline{toc}{chapter}{#1}}

%-----------------------------------------------------
% LISTING CONFIGURATIONS
%-----------------------------------------------------

\ifthenelse{\equal{italian}{\thesislang}}{
	\crefname{lstlisting}{listing}{listato}
}{
	\crefname{lstlisting}{listing}{listing}	
}
\Crefname{lstlisting}{Listing}{\lstlistingname}


\lstdefinelanguage{Kotlin}{
	comment=[l]{//},
	emph={delegate, filter, first, firstOrNull, forEach, lazy, map, mapNotNull, println, return@},
	keywords={abstract, actual, as, as?, break, by, class, companion, continue, data, do, dynamic, else, enum, expect, false, final, for, fun, get, if, import, in, interface, internal, is, null, object, override, package, private, public, return, set, super, suspend, this, throw, true, try, typealias, val, var, vararg, when, where, while},
	morecomment=[s]{/*}{*/},
	morestring=[b]",
	morestring=[s]{"""*}{*"""},
	ndkeywords={@Deprecated, @JvmField, @JvmName, @JvmOverloads, @JvmStatic, @JvmSynthetic, Array, Byte, Double, Float, Int, Integer, Iterable, Long, Runnable, Short, String, Unit, it},
	sensitive=true
}

\input{yaml-def}

\input{scala-def}

\lstset{frame=single,basewidth=0.5em,language={scafi},
basicstyle=\lst@ifdisplaystyle\small\fi\ttfamily}
